[{"D:\\20202\\New folder\\itss_std_react_todo_k62\\src\\index.js":"1","D:\\20202\\New folder\\itss_std_react_todo_k62\\src\\App.js":"2","D:\\20202\\New folder\\itss_std_react_todo_k62\\src\\reportWebVitals.js":"3","D:\\20202\\New folder\\itss_std_react_todo_k62\\src\\components\\Todo.js":"4","D:\\20202\\New folder\\itss_std_react_todo_k62\\src\\components\\TodoItem.js":"5","D:\\20202\\New folder\\itss_std_react_todo_k62\\src\\lib\\util.js":"6","D:\\20202\\New folder\\itss_std_react_todo_k62\\src\\hooks\\storage.js":"7","D:\\20202\\New folder\\itss_std_react_todo_k62\\src\\components\\Filter.js":"8","D:\\20202\\New folder\\itss_std_react_todo_k62\\src\\components\\Input.js":"9","D:\\20202\\New folder\\itss_std_react_todo_k62\\src\\hooks\\fbStorage.js":"10","D:\\20202\\New folder\\itss_std_react_todo_k62\\src\\lib\\firebase.js":"11","D:\\20202\\New folder\\itss_std_react_todo_k62\\src\\components\\Login.js":"12"},{"size":517,"mtime":1621583579111,"results":"13","hashOfConfig":"14"},{"size":1367,"mtime":1621593583853,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1621583579112,"results":"16","hashOfConfig":"14"},{"size":2037,"mtime":1621592971617,"results":"17","hashOfConfig":"14"},{"size":682,"mtime":1621583579109,"results":"18","hashOfConfig":"14"},{"size":68,"mtime":1621583579111,"results":"19","hashOfConfig":"14"},{"size":959,"mtime":1621583579110,"results":"20","hashOfConfig":"14"},{"size":938,"mtime":1621583579107,"results":"21","hashOfConfig":"14"},{"size":833,"mtime":1621583579108,"results":"22","hashOfConfig":"14"},{"size":1142,"mtime":1621592792205,"results":"23","hashOfConfig":"14"},{"size":2035,"mtime":1621593647802,"results":"24","hashOfConfig":"14"},{"size":354,"mtime":1621593676396,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1osiz8y",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},"D:\\20202\\New folder\\itss_std_react_todo_k62\\src\\index.js",[],["56","57"],"D:\\20202\\New folder\\itss_std_react_todo_k62\\src\\App.js",[],"D:\\20202\\New folder\\itss_std_react_todo_k62\\src\\reportWebVitals.js",[],"D:\\20202\\New folder\\itss_std_react_todo_k62\\src\\components\\Todo.js",["58","59","60"],"import React, { useState } from \"react\";\r\n\r\n/* \r\n  【Todoのデータ構成】\r\n　・key：Todoを特定するID（String）\r\n　・text：Todoの内容（String）\r\n　・done：完了状態（Boolean true:完了済み,, false:未完了）\r\n*/\r\n\r\n/* コンポーネント */\r\nimport TodoItem from \"./TodoItem\";\r\nimport Input from \"./Input\";\r\nimport Filter from \"./Filter\";\r\n\r\n/* カスタムフック */\r\n// import useStorage from '../hooks/storage';\r\nimport useFbStorage from \"../hooks/fbStorage\";\r\n/* ライブラリ */\r\nimport { getKey } from \"../lib/util\";\r\n\r\nfunction Todo() {\r\n  const [items, addItem, updateItem, clearItems] = useFbStorage();\r\n  //     /* テストコード 開始 */\r\n  //   { key: getKey(), text: '日本語の宿題', done: false },\r\n  //   { key: getKey(), text: 'reactを勉強する', done: false },\r\n  //   { key: getKey(), text: '明日の準備をする', done: false },\r\n  //   /* テストコード 終了 */\r\n  // ]);\r\n\r\n  const [filter, setFilter] = React.useState(\"ALL\");\r\n\r\n  const displayItems = items.filter((item) => {\r\n    if (filter === \"ALL\") return true;\r\n    if (filter === \"TODO\") return !item.done;\r\n    if (filter === \"DONE\") return item.done;\r\n  });\r\n\r\n  const handleCheck = (checked) => {\r\n    updateItem(checked);\r\n  };\r\n\r\n  const handleAdd = (text) => {\r\n    addItem({ text, done: false });\r\n  };\r\n\r\n  const handleFilterChange = (value) => setFilter(value);\r\n\r\n  return (\r\n    <div className=\"panel\">\r\n      <div className=\"panel-heading\">ITSS ToDoアプリ</div>\r\n      <Input onAdd={handleAdd} />\r\n      <Filter onChange={handleFilterChange} value={filter} />\r\n      {displayItems.map((item) => (\r\n        <TodoItem key={item.id} item={item} onClick={handleCheck} />\r\n      ))}\r\n      <div className=\"panel-block\">{displayItems.length} items</div>\r\n      <div className=\"panel-block\">\r\n        <button className=\"button is-light is-fullwidth\" onClick={clearItems}>\r\n          全てのToDoを削除\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","D:\\20202\\New folder\\itss_std_react_todo_k62\\src\\components\\TodoItem.js",[],"D:\\20202\\New folder\\itss_std_react_todo_k62\\src\\lib\\util.js",[],"D:\\20202\\New folder\\itss_std_react_todo_k62\\src\\hooks\\storage.js",[],"D:\\20202\\New folder\\itss_std_react_todo_k62\\src\\components\\Filter.js",["61","62","63"],"/* \r\n  【Filterコンポーネント】\r\n　・該当するTodoをステータス毎にで分けてリスト表示する\r\n　・タブで表示する\r\n　・サポートするステータスは「すべて」「未完了」「完了済み」\r\n*/\r\nfunction Filter({ value, onChange }) {\r\n  const handleClick = (key, e) => {\r\n    e.preventDefault();\r\n    onChange(key);\r\n  };\r\n  return (\r\n    <div className=\"panel-tabs\">\r\n      <a\r\n        href=\"#\"\r\n        onClick={handleClick.bind(null, 'ALL')}\r\n        className={value === 'ALL' ?  'is-active' : ''}\r\n      >全て</a>\r\n      <a\r\n        href=\"#\"\r\n        onClick={handleClick.bind(null, 'TODO')}\r\n        className={value === 'TODO' ?  'is-active' : ''}\r\n      >未完了</a>\r\n      <a\r\n        href=\"#\"\r\n        onClick={handleClick.bind(null, 'DONE')}\r\n        className={value === 'DONE' ?  'is-active' : ''}\r\n      >完了済み</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter","D:\\20202\\New folder\\itss_std_react_todo_k62\\src\\components\\Input.js",["64"],"import React, { useState } from 'react';\r\n/* \r\n  【inputコンポーネント】\r\n　・新しいTodoを作成するINPUTフィールドを作成するコンポーネント\r\n　・Enterをクリックされたら入力された文字を使って新しいTodoを作成する\r\n*/\r\nfunction Input( { onAdd } ) {\r\n  const [text, setText] = React.useState('');\r\n  const handleChange = e => setText(e.target.value);\r\n  const handleKeyDown = e => {\r\n    if (e.keyCode === 13) {\r\n      onAdd(text);\r\n      setText('');\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"panel-block\">\r\n       <input\r\n        class=\"input\"\r\n        type=\"text\"\r\n        placeholder=\"Todoを入力してください\"\r\n        value={text}\r\n        onChange={handleChange}\r\n        onKeyDown={handleKeyDown}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","D:\\20202\\New folder\\itss_std_react_todo_k62\\src\\hooks\\fbStorage.js",["65"],"import { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  addFirebaseItem,\r\n  updateFirebaseItem,\r\n  getFirebaseItems,\r\n  clearFirebaseItem,\r\n} from \"../lib/firebase\";\r\n\r\nfunction useFbStorage() {\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getItems();\r\n  }, [items]);\r\n\r\n  const getItems = async () => {\r\n    const _items = await getFirebaseItems();\r\n    setItems(_items);\r\n  };\r\n\r\n  const addItem = async (item) => {\r\n    const newItem = { text: item.text, done: item.done };\r\n    await addFirebaseItem(newItem);\r\n    setItems([...items, newItem]);\r\n  };\r\n\r\n  const updateItem = async (checked) => {\r\n    const newItem = { ...checked, done: !checked.done };\r\n    await updateFirebaseItem(newItem, checked.id);\r\n    const newItems = items.map((item) => {\r\n      if (item.id === checked.id) {\r\n        item.done = !checked.done;\r\n      }\r\n      return item;\r\n    });\r\n    setItems(newItems);\r\n  };\r\n\r\n  const clearItems = () => {\r\n    items.map((item) => {\r\n      clearFirebaseItem(item);\r\n    });\r\n    setItems([]);\r\n  };\r\n\r\n  return [items, addItem, updateItem, clearItems];\r\n}\r\n\r\nexport default useFbStorage;\r\n","D:\\20202\\New folder\\itss_std_react_todo_k62\\src\\lib\\firebase.js",[],"D:\\20202\\New folder\\itss_std_react_todo_k62\\src\\components\\Login.js",["66"],"import React from \"react\";\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\n\r\nimport { firebase, auth, uiConfig } from \"../lib/firebase\";\r\n\r\nfunction Login() {\r\n  return (\r\n    <div className=\"column panel-block\">\r\n      <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={auth} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":25},{"ruleId":"71","severity":1,"message":"75","line":19,"column":10,"nodeType":"73","messageId":"74","endLine":19,"endColumn":16},{"ruleId":"76","severity":1,"message":"77","line":32,"column":44,"nodeType":"78","messageId":"79","endLine":32,"endColumn":46},{"ruleId":"80","severity":1,"message":"81","line":14,"column":7,"nodeType":"82","endLine":18,"endColumn":8},{"ruleId":"80","severity":1,"message":"81","line":19,"column":7,"nodeType":"82","endLine":23,"endColumn":8},{"ruleId":"80","severity":1,"message":"81","line":24,"column":7,"nodeType":"82","endLine":28,"endColumn":8},{"ruleId":"71","severity":1,"message":"72","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":25},{"ruleId":"76","severity":1,"message":"83","line":41,"column":22,"nodeType":"78","messageId":"84","endLine":41,"endColumn":24},{"ruleId":"71","severity":1,"message":"85","line":4,"column":10,"nodeType":"73","messageId":"74","endLine":4,"endColumn":18},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'getKey' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Array.prototype.map() expects a return value from arrow function.","expectedInside","'firebase' is defined but never used.","no-global-assign","no-unsafe-negation"]